# Default values for aws-efs-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: aws-efs-csi-driver
namespace: kube-system

replicaCount: 1

image:
  repository: docker.io/giantswarm/aws-efs-csi-driver
  tag: "v1.5.7"
  pullPolicy: IfNotPresent

sidecars:
  livenessProbe:
    image:
      repository: docker.io/giantswarm/livenessprobe
      tag: "v2.7.0"
    resources: {}
  nodeDriverRegistrar:
    image:
      repository: docker.io/giantswarm/csi-node-driver-registrar
      tag: "v2.5.1"
    resources: {}
  csiProvisioner:
    image:
      repository: docker.io/giantswarm/csi-provisioner
      tag: "v3.1.0"
    resources: {}

nameOverride: ""
fullnameOverride: ""

node:
  # Number for the log level verbosity
  logLevel: 2
  hostAliases:
    {}
    # For cross VPC EFS, you need to poison or overwrite the DNS for the efs volume as per
    # https://docs.aws.amazon.com/efs/latest/ug/efs-different-vpc.html#wt6-efs-utils-step3
    # implementing the suggested solution found here:
    # https://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/240#issuecomment-676849346
    # EFS Vol ID, IP, Region
    # "fs-01234567":
    #   ip: 10.10.2.2
    #   region: us-east-2
  dnsPolicy: ClusterFirst
  dnsConfig:
    {}
  podAnnotations: {}
  resources:
    {}
  nodeSelector:
    kubernetes.io/role: worker
  tolerations:
    - operator: Exists
  # Specifies whether a service account should be created
  serviceAccount:
    create: true
    name: efs-csi-node-sa
    annotations: {}
    ## Enable if EKS IAM for SA is used
    #  eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/efs-csi-role
  healthPort: 9809

controller:
  # Specifies whether a deployment should be created
  create: true
  # Number for the log level verbosity
  logLevel: 2
  # If set, add pv/pvc metadata to plugin create requests as parameters.
  extraCreateMetadata: true
  # Add additional tags to access points
  tags:
    {}
    # environment: prod
    # region: us-east-1
  # Enable if you want the controller to also delete the
  # path on efs when deleteing an access point
  deleteAccessPointRootDir: false
  volMetricsOptIn: false
  podAnnotations: {}
  resources:
    {}
  nodeSelector:
    kubernetes.io/role: master
  tolerations:
    - operator: Exists
  affinity: {}
  serviceAccount:
    create: true
    name: efs-csi-controller-sa
    annotations: {}
    ## Enable if EKS IAM for SA is used
    #  eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/efs-csi-role
  healthPort: 9909
  regionalStsEndpoints: false
  # Specified the deployment strategy
  # Ex: RollingUpdate
  strategy: Recreate

storageClasses: []
# Add StorageClass resources like:
# - name: efs-sc
##  Use that annotation if you want this to your default storageclass
#   annotations:
#     storageclass.kubernetes.io/is-default-class: "true"
#   mountOptions:
#   - tls
#   parameters:
#     provisioningMode: efs-ap
#     fileSystemId: fs-92107410
#     fileSystemId: fs-1122aabb
#     directoryPerms: "700"
#     gidRangeStart: "1000"
#     gidRangeEnd: "2000"

verticalPodAutoscaler:
  enabled: true
